#1 ==========================================================================================
mbuf作为最主要的数据结构，共有四种形态(不同形态对应不同用途)：
1）只包含数据，128个字节的mbuf中，有108个字节用来存储数据，一般用在链表中部
2）分组首部，128个字节的mbuf中，有100个字节用来存储数据，用在链表首部
3）只包含数据，这里的数据不同于1），这里包含一个指针，用来指向一个更大的存储空间，更大的存储
   空间一般是一个1024或2048的存储块，叫做簇。这个一般用在链表中部
4）分组首部，和3）类似，这也是一种外带数据的结构，这种情况的mbuf中包含两个标志位M_PKDHDR和M_EXT


#2 ==========================================================================================
mbuf有两个链表指针，一个指向下一个mbuf链表节点。一个指向下一个mbuf链表

前者将mbuf链接成一个链表。后者将mbuf链表链接成mbuf链表队列。
可以理解为二维链表。


mbuf结构中，有一个字段用来表示当前mbuf节点的属性，那就是mh_flags，取值有如下几类：
1）M_BCAST 	作为链路层广播发送/接收
2）M_EOR	记录结束
3）M_EXT	当前mbuf的数据内容指向一个簇，即#1中的3）
4）M_PKTHDR	链表首节点，形成一个ip分组

这里对于 M_EOR 来说，仅仅在有边界的协议中会用到，比如UDP。对于TCP来说就没有，TCP是面向连接的
，不要指定数据何时结束。连接断开就是结束

#3 ==========================================================================================
一个ip数据包可能非常大，然后会被切割成多个分片，分批次到达以太网接口。那么以太网驱动程序也会
根据到达的顺序，分别分配不同的mbuf链表。然后再将这些mbuf链表链接起来，形成重组的完整的ip包

这就是ip包的分片 和 重组


#4 ==========================================================================================

当接收到一个 以太网帧 时，设备驱动程序调用 m_devget 来创建一个 mbuf链表，并把以太网帧中
的数据复制到 mbuf 链表中。


#5 ==========================================================================================

二维链表结构的mbuf，主要用来完成“接收和发送队列”的模型抽象。提供这种数据结构，让操作函数能够
不停地循环工作下去。



#小结 ==========================================================================================

mbuf的四种形态：
1）非首部，0~108个字节的实际数据
2）首部，0~100字节的实际数据
3）非首部，实际数据存在簇中，通过mbuf中的指针指向簇
4）首部，实际数据存在簇中，通过mbuf中的指针指向簇














